let $a := <a>{<b1>{"c"}</b1>,<b2>{"c"}</b2>}</a>
$a//b1


###
let $a := <a>{<b1>{<c>{"d"}</c>}</b1>,<b2>{"c"}</b2>}</a>
$a//c


###
let $a := <a>{<c>{<c>{"d"}</c>}</c>,<a>{"c"}</a>}</a>
$a//c


###
let $a := <a>{<b1>{"c"}</b1>,<b2>{"c"}</b2>}</a>
$a/b1


###
let $a := <a>{<b1>{<c>{"d"}</c>}</b1>,<b2>{"c"}</b2>}</a>
$a/c


###
let $a := <a>{<b1>{<c>{"d"}</c>}</b1>,<b2>{"c"}</b2>}</a>
$a/b1/c/text()


###
let $a := "a", $b := "b", $c := $d, $e := ($a, $b, $c, $d), $a := "f", $e := ($e, "g")
$e


###
let $a := $b, $b := $a, $c := $d, $d := $e, $e := "e"
($e, $d, $c, $b, $a)


###
let
$a := $a,
$root := <l>{<l1>{<l2>{<l3>{<l4>{<l5>{"t"}</l5>}</l4>}</l3>}</l2>}</l1>}</l>,
$l1 := $root/*,
$l2 := $l1/*,
$l3 := $l2/*,
$l4 := $l3/*,
$l5 := $l4/*,
$r4 := $l5/..,
$r3 := $r4/..,
$r2 := $r3/..,
$r1 := $r2/..
(
<t>{
$r1,
($l5/text())
}</t>
)


###
<result>{
<t1>{$t}</t1>,
<t2>{$t}</t2>
}</result>


###
let $a := ((("t", ("e")), "s"), "t")
<result>{
  $a
}</result>


###
<a>{
<b>{"b"}</b>,
<c>{"c"}</c>
}</a>


###
<digits>{
((("1"), "2"), "3"), ((("4", "5"), ("6", "7"), "8"), "9")
}</digits>


###
<result>{
(let $a := "a", $b := "b"
($a, $b)
),
$a
}</result>


###
<result>{
let $a := "a", $b := "b"
(
($a, $b),
$a
)
}</result>


###
<result>{
  " "
}</result>


###
"a-zA-Z0-9_,.!?; /\\\-()'"


###
"
"


###
<a>{<b>{"c"}</d>}</a>


###
<a>{<b>{"c"}</b>}</a>


###
<result>{
doc("j_caesar_altered.xml")//@f
}</result>


###
$UndefinedVariable


###
<tag>{
  let $a := "String"
  $a
}</tag>


###
<result>{
  let $a := doc("j_caesar.xml")/., $a := $a//P, $a := $a/text()
  $a
}</result>
